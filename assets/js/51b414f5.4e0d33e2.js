"use strict";(self.webpackChunkpemweb_2025=self.webpackChunkpemweb_2025||[]).push([[159],{3854:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"Materi/pertemuan-13","title":"Pertemuan 13: Laravel 4 (Search Function)","description":"Pemrograman Website \u2014 diselenggarakan oleh Fakultas Teknologi Informasi dan Sains Data Universitas Sebelas Maret, Semester Genap 2024/2025","source":"@site/docs/Materi/pertemuan-13.md","sourceDirName":"Materi","slug":"/Materi/pertemuan-13","permalink":"/PEMWEB-2025/docs/Materi/pertemuan-13","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_label":"Pertemuan 13: Laravel 4 (Search Function)","sidebar_position":13,"Path":"docs/materi/pertemuan-13"},"sidebar":"tutorialSidebar","previous":{"title":"Pertemuan 12: Laravel 3 (CRUD Operations)","permalink":"/PEMWEB-2025/docs/Materi/pertemuan-12"},"next":{"title":"Tugas 1","permalink":"/PEMWEB-2025/docs/Tugas Individu/tugas-1"}}');var s=a(4848),r=a(8453);const l={sidebar_label:"Pertemuan 13: Laravel 4 (Search Function)",sidebar_position:13,Path:"docs/materi/pertemuan-13"},i="Pertemuan 13: Laravel 4 (Search Function)",d={},o=[{value:"1. Pengenalan Search",id:"1-pengenalan-search",level:2},{value:"Konsep Pencarian dalam Laravel",id:"konsep-pencarian-dalam-laravel",level:3},{value:"Metode Implementasi Pencarian",id:"metode-implementasi-pencarian",level:3},{value:"Third-party Packages: Menggunakan package seperti Algolia atau Elasticsearch",id:"third-party-packages-menggunakan-package-seperti-algolia-atau-elasticsearch",level:2},{value:"2. Persiapan Proyek",id:"2-persiapan-proyek",level:2},{value:"Membuat Model, Migration, dan Controller",id:"membuat-model-migration-dan-controller",level:3},{value:"Migration Students",id:"migration-students",level:3},{value:"Model Student",id:"model-student",level:3},{value:"Menjalankan Migration",id:"menjalankan-migration",level:3},{value:"3. Membuat Controller",id:"3-membuat-controller",level:2},{value:"Membuat Controller",id:"membuat-controller",level:3},{value:"4. Routing",id:"4-routing",level:2},{value:"Resource Routes",id:"resource-routes",level:3},{value:"Route List",id:"route-list",level:3},{value:"5. Views Blade",id:"5-views-blade",level:2},{value:"Layout Template",id:"layout-template",level:3},{value:"Index View (Read)",id:"index-view-read",level:3},{value:"Show View",id:"show-view",level:3},{value:"7. Seeder untuk Testing",id:"7-seeder-untuk-testing",level:2},{value:"Buat Factory Sederhana",id:"buat-factory-sederhana",level:3},{value:"Buat Seeder",id:"buat-seeder",level:3},{value:"Daftarkan Seeder",id:"daftarkan-seeder",level:3},{value:"8. Test",id:"8-test",level:2},{value:"Menjalankan Aplikasi",id:"menjalankan-aplikasi",level:3},{value:"Test Manual",id:"test-manual",level:3},{value:"Referensi",id:"referensi",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"pertemuan-13-laravel-4-search-function",children:"Pertemuan 13: Laravel 4 (Search Function)"})}),"\n",(0,s.jsx)(n.p,{children:"Pemrograman Website \u2014 diselenggarakan oleh Fakultas Teknologi Informasi dan Sains Data Universitas Sebelas Maret, Semester Genap 2024/2025"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1-pengenalan-search",children:"1. Pengenalan Search"}),"\n",(0,s.jsx)(n.p,{children:"Pencarian (search) adalah fitur penting dalam aplikasi web yang memungkinkan pengguna untuk menemukan data spesifik dari kumpulan data yang besar. Laravel menyediakan berbagai cara untuk mengimplementasikan fungsi pencarian dengan mudah dan efisien."}),"\n",(0,s.jsx)(n.h3,{id:"konsep-pencarian-dalam-laravel",children:"Konsep Pencarian dalam Laravel"}),"\n",(0,s.jsx)(n.p,{children:"Basic Search: Pencarian sederhana dengan query WHERE"}),"\n",(0,s.jsx)(n.p,{children:"Pagination with Search: Kombinasi pencarian dengan paginasi untuk pengalaman pengguna yang lebih baik"}),"\n",(0,s.jsx)(n.h3,{id:"metode-implementasi-pencarian",children:"Metode Implementasi Pencarian"}),"\n",(0,s.jsx)(n.p,{children:"Query Builder: Menggunakan metode where() dan orWhere()"}),"\n",(0,s.jsx)(n.p,{children:"Eloquent: Memanfaatkan fitur-fitur Eloquent ORM"}),"\n",(0,s.jsx)(n.p,{children:"Laravel Scout: Untuk pencarian full-text yang lebih canggih"}),"\n",(0,s.jsx)(n.h2,{id:"third-party-packages-menggunakan-package-seperti-algolia-atau-elasticsearch",children:"Third-party Packages: Menggunakan package seperti Algolia atau Elasticsearch"}),"\n",(0,s.jsx)(n.h2,{id:"2-persiapan-proyek",children:"2. Persiapan Proyek"}),"\n",(0,s.jsx)(n.h3,{id:"membuat-model-migration-dan-controller",children:"Membuat Model, Migration, dan Controller"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Membuat model dengan migration dan controller sekaligus\nphp artisan make:model Student -mc\n\n# Atau membuat secara terpisah\nphp artisan make:model Student\nphp artisan make:migration create_students_table\nphp artisan make:controller StudentController --resource\n"})}),"\n",(0,s.jsx)(n.h3,{id:"migration-students",children:"Migration Students"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// database/migrations/xxxx_xx_xx_create_students_table.php\n<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    public function up()\n    {\n        Schema::create('students', function (Blueprint $table) {\n            $table->id();\n            $table->string('name');\n            $table->text('bio');\n            $table->date('date_of_birth');\n            $table->enum('gender', ['male', 'female', 'other'])->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('students');\n    }\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"model-student",children:"Model Student"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// app/Models/Student.php\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Student extends Model\n{\n    use HasFactory;\n\n    protected $fillable = [\n        'name',\n        'bio',\n        'date_of_birth',\n        'gender',\n    ];\n\n    protected $casts = [\n        'date_of_birth' => 'date',\n    ];\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"menjalankan-migration",children:"Menjalankan Migration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"php artisan migrate\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-membuat-controller",children:"3. Membuat Controller"}),"\n",(0,s.jsx)(n.h3,{id:"membuat-controller",children:"Membuat Controller"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// app/Http/Controllers/StudentController.php\n<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Student;\nuse Illuminate\\Http\\Request;\n\nclass StudentController extends Controller\n{\n    public function index(Request $request)\n    {\n        $search = $request->input('search');\n\n        $students = Student::when($search, function ($query, $search) {\n            $query->where('name', 'like', \"%{$search}%\")\n            ->orWhere('bio', 'like', \"%$search%\");\n        })->paginate(10)->withQueryString();\n\n        return view('students.index', compact('students', 'search'));\n    }\n\n\n    public function show(Student $student)\n    {\n        return view('students.show', compact('student'));\n    }\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-routing",children:"4. Routing"}),"\n",(0,s.jsx)(n.h3,{id:"resource-routes",children:"Resource Routes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// routes/web.php\n<?php\n\nuse App\\Http\\Controllers\\StudentController;\nuse Illuminate\\Support\\Facades\\Route;\n\nRoute::get('/', function () {\n    return view('welcome');\n});\n\nRoute::resource('products', StudentController::class)->only([\n    'index', 'show'\n]);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"route-list",children:"Route List"}),"\n",(0,s.jsx)(n.p,{children:"Resource route akan menghasilkan route berikut:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Method"}),(0,s.jsx)(n.th,{children:"URI"}),(0,s.jsx)(n.th,{children:"Action"}),(0,s.jsx)(n.th,{children:"Route Name"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"GET"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/products"})}),(0,s.jsx)(n.td,{children:"index"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"products.index"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"GET"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/products/{product}"})}),(0,s.jsx)(n.td,{children:"show"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"products.show"})})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-views-blade",children:"5. Views Blade"}),"\n",(0,s.jsx)(n.h3,{id:"layout-template",children:"Layout Template"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'\x3c!-- resources/views/layouts/app.blade.php --\x3e\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>@yield(\'title\', \'Laravel Search\')</title>\n    <link\n      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"\n      rel="stylesheet"\n    />\n  </head>\n  <body>\n    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">\n      <div class="container">\n        <a class="navbar-brand" href="{{ route(\'students.index\') }}"\n          >Student List</a\n        >\n      </div>\n    </nav>\n\n    <div class="container mt-4">\n      @if(session(\'success\'))\n      <div class="alert alert-success">{{ session(\'success\') }}</div>\n      @endif @yield(\'content\')\n    </div>\n\n    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"><\/script>\n  </body>\n</html>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"index-view-read",children:"Index View (Read)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'\x3c!-- resources/views/students/index.blade.php --\x3e\n\n@extends(\'layouts.app\')\n\n@section(\'title\', \'Student List Search\')\n\n@section(\'content\')\n\n    <div class="d-flex justify-content-between mb-3">\n        <h2>Student List</h2>\n\n        <form action="{{ route(\'students.index\') }}" method="GET" class="d-flex">\n            <input type="text" name="search" class="form-control me-2" placeholder="Search by name"\n                value="{{ request(\'search\') }}">\n            <button class="btn btn-outline-primary" type="submit">Search</button>\n        </form>\n    </div>\n\n    @if ($students->isEmpty())\n        <div class="alert alert-info">No students found.</div>\n    @else\n        <table class="table table-bordered table-striped">\n            <thead class="table-dark">\n                <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Bio</th>\n                    <th>Date of Birth</th>\n                    <th>Gender</th>\n                    <th>Created At</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                @foreach ($students as $student)\n                    <tr>\n                        <td>{{ $loop->iteration }}</td>\n                        <td>{{ $student->name }}</td>\n                        <td>{{ Str::limit($student->bio, 50) }}</td>\n                        <td>{{ $student->date_of_birth->format(\'Y-m-d\') }}</td>\n                        <td>{{ ucfirst($student->gender) }}</td>\n                        <td>{{ $student->created_at->format(\'Y-m-d\') }}</td>\n                        <td>\n                            <a href="{{ route(\'students.show\', $student->id) }}" class="btn btn-sm btn-info">View</a>\n                        </td>\n                    </tr>\n                @endforeach\n            </tbody>\n        </table>\n\n        <div class="justify-content-center">\n            {{ $students->links(\'pagination::bootstrap-5\') }}\n        </div>\n    @endif\n@endsection\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"show-view",children:"Show View"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"\x3c!-- resources/views/students/show.blade.php --\x3e\n\n@extends('layouts.app')\n\n@section('title', 'Student Details')\n\n@section('content')\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h4>Student Details</h4>\n        </div>\n        <div class=\"card-body\">\n            <p><strong>Name:</strong> {{ $student->name }}</p>\n            <p><strong>Bio:</strong> {{ $student->bio }}</p>\n            <p><strong>Date of Birth:</strong> {{ $student->date_of_birth->format('Y-m-d') }}</p>\n            <p><strong>Gender:</strong> {{ ucfirst($student->gender) }}</p>\n            <p><strong>Created At:</strong> {{ $student->created_at->format('Y-m-d H:i') }}</p>\n        </div>\n        <div class=\"card-footer\">\n            <a href=\"{{ route('students.index') }}\" class=\"btn btn-secondary\">Back</a>\n        </div>\n    </div>\n@endsection\n\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"7-seeder-untuk-testing",children:"7. Seeder untuk Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Buat Factory\nphp artisan make:factory StudentFactory --model=Student\n\n# Buat Seeder\nphp artisan make:seeder StudentSeeder\n"})}),"\n",(0,s.jsx)(n.h3,{id:"buat-factory-sederhana",children:"Buat Factory Sederhana"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// database/factories/StudentFactory.php\n<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\n/**\n * @extends \\Illuminate\\Database\\Eloquent\\Factories\\Factory<\\App\\Models\\Student>\n */\nclass StudentFactory extends Factory\n{\n    public function definition(): array\n    {\n        return [\n            'name' => $this->faker->name(),\n            'bio' => $this->faker->paragraph(),\n            'date_of_birth' => $this->faker->date('Y-m-d', '-18 years'),\n            'gender' => $this->faker->randomElement(['male', 'female', 'other']),\n        ];\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"buat-seeder",children:"Buat Seeder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// database/seeders/StudentSeeder.php\n<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\Student;\n\nclass StudentSeeder extends Seeder\n{\n    public function run(): void\n    {\n        Student::factory()->count(20)->create();\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"daftarkan-seeder",children:"Daftarkan Seeder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// database/seeders/DatabaseSeeder.php\n<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\n// use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        $this->call([\n            StudentSeeder::class,\n        ]);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Jalankan Seeder\nphp artisan migrate:fresh --seed\n\n# Bila Perlu, Migrate Fresh\nphp artisan migrate:fresh --seed\n\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"8-test",children:"8. Test"}),"\n",(0,s.jsx)(n.h3,{id:"menjalankan-aplikasi",children:"Menjalankan Aplikasi"}),"\n",(0,s.jsx)(n.h3,{id:"test-manual",children:"Test Manual"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Buka ",(0,s.jsx)(n.code,{children:"http://localhost:8000/students"})]}),"\n",(0,s.jsx)(n.li,{children:"Test Search, nama ataupun bio"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"referensi",children:"Referensi"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://laravel.com/docs/controllers",children:"Laravel Controllers"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://laravel.com/docs/eloquent",children:"Laravel Eloquent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://laravel.com/docs/blade",children:"Laravel Blade Templates"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://laravel.com/docs/pagination",children:"Laravel Pagination"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>i});var t=a(6540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);