"use strict";(self.webpackChunkpemweb_2025=self.webpackChunkpemweb_2025||[]).push([[697],{5815:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"Materi/pertemuan-11","title":"Pertemuan 11: Laravel 2 (Migration Seeder Factory) & Authentication","description":"Pemrograman Website \u2014 diselenggarakan oleh Fakultas Teknologi Informasi dan Sains Data Universitas Sebelas Maret, Semester Genap 2024/2025","source":"@site/docs/Materi/pertemuan-11.md","sourceDirName":"Materi","slug":"/Materi/pertemuan-11","permalink":"/PEMWEB-2025/docs/Materi/pertemuan-11","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_label":"Pertemuan 11: Laravel 2 (Migration Seeder Factory) & Authentication","sidebar_position":11,"Path":"docs/materi/pertemuan-11"},"sidebar":"tutorialSidebar","previous":{"title":"Pertemuan 10: Laravel 1 (MVC) Routes","permalink":"/PEMWEB-2025/docs/Materi/pertemuan-10"},"next":{"title":"Pertemuan 12: Laravel 3 (CRUD Operations)","permalink":"/PEMWEB-2025/docs/Materi/pertemuan-12"}}');var i=n(4848),t=n(8453);const l={sidebar_label:"Pertemuan 11: Laravel 2 (Migration Seeder Factory) & Authentication",sidebar_position:11,Path:"docs/materi/pertemuan-11"},s="Pertemuan 11: Laravel 2 (Migration Seeder Factory) & Authentication",d={},o=[{value:"1. Migration",id:"1-migration",level:2},{value:"Kelebihan Menggunakan Migration",id:"kelebihan-menggunakan-migration",level:3},{value:"Perintah Dasar",id:"perintah-dasar",level:3},{value:"Contoh Migration",id:"contoh-migration",level:3},{value:"2. Seeder &amp; Factory",id:"2-seeder--factory",level:2},{value:"Pengertian",id:"pengertian",level:3},{value:"Kelebihan",id:"kelebihan",level:3},{value:"Langkah-langkah",id:"langkah-langkah",level:3},{value:"a. Membuat Factory",id:"a-membuat-factory",level:4},{value:"b. Membuat Seeder",id:"b-membuat-seeder",level:4},{value:"c. Menjalankan Seeder",id:"c-menjalankan-seeder",level:4},{value:"d. Menjalankan Semua Seeder",id:"d-menjalankan-semua-seeder",level:4},{value:"3. Authentication",id:"3-authentication",level:2},{value:"A. Auth Secara Manual (Vanilla Laravel)",id:"a-auth-secara-manual-vanilla-laravel",level:3},{value:"1. Migration dan Model User",id:"1-migration-dan-model-user",level:4},{value:"2. Routing",id:"2-routing",level:4},{value:"3. Controller",id:"3-controller",level:4},{value:"4. View Blade",id:"4-view-blade",level:4},{value:"5. Proteksi Halaman",id:"5-proteksi-halaman",level:4},{value:"B. Starter Kit (Breeze, UI, Jetstream)",id:"b-starter-kit-breeze-ui-jetstream",level:3},{value:"Laravel Breeze",id:"laravel-breeze",level:4},{value:"Instalasi",id:"instalasi",level:5},{value:"Jalankan Server",id:"jalankan-server",level:5},{value:"Laravel UI (Alternatif)",id:"laravel-ui-alternatif",level:4},{value:"Referensi",id:"referensi",level:2}];function c(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.header,{children:(0,i.jsx)(a.h1,{id:"pertemuan-11-laravel-2-migration-seeder-factory--authentication",children:"Pertemuan 11: Laravel 2 (Migration Seeder Factory) & Authentication"})}),"\n",(0,i.jsx)(a.p,{children:"Pemrograman Website \u2014 diselenggarakan oleh Fakultas Teknologi Informasi dan Sains Data Universitas Sebelas Maret, Semester Genap 2024/2025"}),"\n",(0,i.jsx)(a.hr,{}),"\n",(0,i.jsx)(a.h2,{id:"1-migration",children:"1. Migration"}),"\n",(0,i.jsx)(a.p,{children:"Migration adalah fitur Laravel yang memungkinkan kita mengelola versi skema database menggunakan kode PHP. Setiap perubahan struktur database ditulis dalam file migration, sehingga pengelolaan skema database menjadi lebih terstruktur, terdokumentasi, dan bisa dikontrol versi-nya."}),"\n",(0,i.jsx)(a.h3,{id:"kelebihan-menggunakan-migration",children:"Kelebihan Menggunakan Migration"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Menghindari inkonsistensi struktur database."}),"\n",(0,i.jsx)(a.li,{children:"Dapat digunakan oleh tim secara kolaboratif."}),"\n",(0,i.jsx)(a.li,{children:"Bisa rollback jika ada kesalahan pada struktur."}),"\n",(0,i.jsx)(a.li,{children:"Dapat diatur menggunakan version control seperti Git."}),"\n"]}),"\n",(0,i.jsx)(a.h3,{id:"perintah-dasar",children:"Perintah Dasar"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"php artisan make:migration create_users_table\nphp artisan migrate\nphp artisan migrate:rollback\n"})}),"\n",(0,i.jsx)(a.h3,{id:"contoh-migration",children:"Contoh Migration"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-php",children:"// database/migrations/xxxx_xx_xx_create_products_table.php\npublic function up()\n{\n    Schema::create('products', function (Blueprint $table) {\n        $table->id();\n        $table->string('name');\n        $table->double('price');\n        $table->timestamps();\n    });\n}\n"})}),"\n",(0,i.jsx)(a.hr,{}),"\n",(0,i.jsx)(a.h2,{id:"2-seeder--factory",children:"2. Seeder & Factory"}),"\n",(0,i.jsx)(a.h3,{id:"pengertian",children:"Pengertian"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.strong,{children:"Seeder"}),": Digunakan untuk mengisi data awal atau data dummy ke dalam tabel database. Cocok untuk testing dan pengembangan."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.strong,{children:"Factory"}),": Menghasilkan data dummy secara otomatis dengan atribut acak berdasarkan template yang ditentukan, menggunakan library Faker."]}),"\n"]}),"\n",(0,i.jsx)(a.h3,{id:"kelebihan",children:"Kelebihan"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Menghemat waktu input manual saat testing."}),"\n",(0,i.jsx)(a.li,{children:"Dapat mengisi database dalam jumlah besar."}),"\n",(0,i.jsx)(a.li,{children:"Dapat digunakan pada CI/CD pipeline."}),"\n"]}),"\n",(0,i.jsx)(a.h3,{id:"langkah-langkah",children:"Langkah-langkah"}),"\n",(0,i.jsx)(a.h4,{id:"a-membuat-factory",children:"a. Membuat Factory"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"php artisan make:factory ProductFactory --model=Product\n"})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-php",children:"// database/factories/ProductFactory.php\npublic function definition()\n{\n    return [\n        'name' => $this->faker->word(),\n        'price' => $this->faker->randomFloat(2, 1000, 100000),\n    ];\n}\n"})}),"\n",(0,i.jsx)(a.h4,{id:"b-membuat-seeder",children:"b. Membuat Seeder"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"php artisan make:seeder ProductSeeder\n"})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-php",children:"// database/seeders/ProductSeeder.php\npublic function run()\n{\n    \\App\\Models\\Product::factory(10)->create();\n}\n"})}),"\n",(0,i.jsx)(a.h4,{id:"c-menjalankan-seeder",children:"c. Menjalankan Seeder"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"php artisan db:seed --class=ProductSeeder\n"})}),"\n",(0,i.jsx)(a.h4,{id:"d-menjalankan-semua-seeder",children:"d. Menjalankan Semua Seeder"}),"\n",(0,i.jsxs)(a.p,{children:["Tambahkan ke ",(0,i.jsx)(a.code,{children:"DatabaseSeeder.php"}),":"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-php",children:"public function run()\n{\n    $this->call(ProductSeeder::class);\n}\n"})}),"\n",(0,i.jsx)(a.p,{children:"Jalankan:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"php artisan db:seed\n"})}),"\n",(0,i.jsx)(a.hr,{}),"\n",(0,i.jsx)(a.h2,{id:"3-authentication",children:"3. Authentication"}),"\n",(0,i.jsx)(a.h3,{id:"a-auth-secara-manual-vanilla-laravel",children:"A. Auth Secara Manual (Vanilla Laravel)"}),"\n",(0,i.jsx)(a.p,{children:"Laravel dapat menangani otentikasi secara manual tanpa menggunakan starter kit seperti Breeze atau UI. Berikut adalah langkah-langkahnya:"}),"\n",(0,i.jsx)(a.h4,{id:"1-migration-dan-model-user",children:"1. Migration dan Model User"}),"\n",(0,i.jsxs)(a.p,{children:["Pastikan tabel ",(0,i.jsx)(a.code,{children:"users"})," sudah tersedia dari default Laravel."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-php",children:"// users table migration (default)\n$table->string('name');\n$table->string('email')->unique();\n$table->timestamp('email_verified_at')->nullable();\n$table->string('password');\n"})}),"\n",(0,i.jsx)(a.h4,{id:"2-routing",children:"2. Routing"}),"\n",(0,i.jsx)(a.p,{children:"Tambahkan route login, register, dan logout:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-php",children:"// routes/web.php\n\nuse App\\Http\\Controllers\\AuthController;\n\nRoute::get('/register', [AuthController::class, 'showRegisterForm']);\nRoute::post('/register', [AuthController::class, 'register']);\n\nRoute::get('/login', [AuthController::class, 'showLoginForm'])->name('login');\nRoute::post('/login', [AuthController::class, 'login']);\n\nRoute::post('/logout', [AuthController::class, 'logout'])->name('logout');\n"})}),"\n",(0,i.jsx)(a.h4,{id:"3-controller",children:"3. Controller"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"php artisan make:controller AuthController\n"})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-php",children:"// app/Http/Controllers/AuthController.php\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass AuthController extends Controller\n{\n    public function showRegisterForm()\n    {\n        return view('auth.register');\n    }\n\n    public function register(Request $request)\n    {\n        $request->validate([\n            'name' => 'required',\n            'email' => 'required|email|unique:users',\n            'password' => 'required|min:6|confirmed',\n        ]);\n\n        User::create([\n            'name' => $request->name,\n            'email' => $request->email,\n            'password' => Hash::make($request->password),\n        ]);\n\n        return redirect('/login');\n    }\n\n    public function showLoginForm()\n    {\n        return view('auth.login');\n    }\n\n    public function login(Request $request)\n    {\n        $credentials = $request->only('email', 'password');\n\n        if (Auth::attempt($credentials)) {\n            $request->session()->regenerate();\n            return redirect()->intended('/dashboard');\n        }\n\n        return back()->withErrors([\n            'email' => 'Login gagal. Periksa kembali email dan password.',\n        ]);\n    }\n\n    public function logout(Request $request)\n    {\n        Auth::logout();\n        $request->session()->invalidate();\n        $request->session()->regenerateToken();\n        return redirect('/login');\n    }\n}\n"})}),"\n",(0,i.jsx)(a.h4,{id:"4-view-blade",children:"4. View Blade"}),"\n",(0,i.jsxs)(a.p,{children:["Buat folder ",(0,i.jsx)(a.code,{children:"resources/views/auth"})," dan tambahkan dua file:"]}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.code,{children:"login.blade.php"})}),"\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.code,{children:"register.blade.php"})}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:"Isi sederhana:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-blade",children:'\x3c!-- resources/views/auth/login.blade.php --\x3e\n<form method="POST" action="/login">\n    @csrf\n    <input name="email" type="email" placeholder="Email">\n    <input name="password" type="password" placeholder="Password">\n    <button type="submit">Login</button>\n</form>\n'})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-blade",children:'\x3c!-- resources/views/auth/register.blade.php --\x3e\n<form method="POST" action="/register">\n    @csrf\n    <input name="name" type="text" placeholder="Name">\n    <input name="email" type="email" placeholder="Email">\n    <input name="password" type="password" placeholder="Password">\n    <input name="password_confirmation" type="password" placeholder="Confirm Password">\n    <button type="submit">Register</button>\n</form>\n'})}),"\n",(0,i.jsx)(a.h4,{id:"5-proteksi-halaman",children:"5. Proteksi Halaman"}),"\n",(0,i.jsxs)(a.p,{children:["Gunakan middleware ",(0,i.jsx)(a.code,{children:"auth"}),":"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-php",children:"Route::get('/dashboard', function () {\n    return view('dashboard');\n})->middleware('auth');\n"})}),"\n",(0,i.jsx)(a.hr,{}),"\n",(0,i.jsx)(a.h3,{id:"b-starter-kit-breeze-ui-jetstream",children:"B. Starter Kit (Breeze, UI, Jetstream)"}),"\n",(0,i.jsx)(a.p,{children:"Laravel juga menyediakan starter kit otentikasi yang siap pakai untuk mempercepat pengembangan."}),"\n",(0,i.jsx)(a.h4,{id:"laravel-breeze",children:"Laravel Breeze"}),"\n",(0,i.jsx)(a.h5,{id:"instalasi",children:"Instalasi"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"composer require laravel/breeze --dev\nphp artisan breeze:install\nnpm install && npm run dev\nphp artisan migrate\n"})}),"\n",(0,i.jsx)(a.h5,{id:"jalankan-server",children:"Jalankan Server"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"php artisan serve\n"})}),"\n",(0,i.jsx)(a.p,{children:"Akses:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.code,{children:"http://localhost:8000/register"})}),"\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.code,{children:"http://localhost:8000/login"})}),"\n"]}),"\n",(0,i.jsx)(a.h4,{id:"laravel-ui-alternatif",children:"Laravel UI (Alternatif)"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",children:"composer require laravel/ui\nphp artisan ui bootstrap --auth\nnpm install && npm run dev\nphp artisan migrate\n"})}),"\n",(0,i.jsx)(a.hr,{}),"\n",(0,i.jsx)(a.h2,{id:"referensi",children:"Referensi"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.a,{href:"https://laravel.com/docs/migrations",children:"Laravel Migrations"})}),"\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.a,{href:"https://laravel.com/docs/seeding",children:"Laravel Seeding"})}),"\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.a,{href:"https://laravel.com/docs/starter-kits",children:"Laravel Authentication"})}),"\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.a,{href:"https://laravel.com/docs/authentication",children:"Laravel Manual Auth"})}),"\n"]}),"\n",(0,i.jsx)(a.hr,{})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>l,x:()=>s});var r=n(6540);const i={},t=r.createContext(i);function l(e){const a=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:a},e.children)}}}]);